<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="System.Windows.Forms" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Resources" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".cs" #>
<#
        var nameSpace = Host.ResolveParameterValue("directiveId", "namespaceDirectiveProcessor", "namespaceHint");
        var className = "Keys";
        var resName = System.IO.Path.GetFileNameWithoutExtension(Host.TemplateFile);
        var resourceFileName =  System.IO.Path.GetDirectoryName(Host.TemplateFile) 
            + "\\" 
            + resName + ".resx";
        var resourceDesignFileName =  System.IO.Path.GetDirectoryName(Host.TemplateFile) 
            + "\\" 
            + resName + ".Designer.cs";
        var rr = new System.Resources.ResXResourceReader(resourceFileName);
        rr.UseResXDataNodes = true;
        var dict = rr.GetEnumerator();
        var content = File.ReadAllText(resourceDesignFileName);
        if(!content.Contains("partial"))
        {
            content = content.Replace("class " + resName, "partial class " + resName);
            File.WriteAllText(resourceDesignFileName, content);
        }

#>

using System;

namespace <#= nameSpace#>
{
    partial class <#= resName#> {
        /// <summary>
        /// Autogenerated constants for <#= resName #> resources
        /// </summary>
        public static class <#= className #>
        {
    <#
          while (dict.MoveNext()){
          string value = ((string)((System.Resources.ResXDataNode)dict.Value).GetValue((System.ComponentModel.Design.ITypeResolutionService)null));
          string comment = ((System.Resources.ResXDataNode)dict.Value).Comment;
    #>
        /// <summary>
           /// <#=value.Replace("\r\n", " ")#>
            <#if(!System.String.IsNullOrEmpty(comment) && comment != " ") 
                Write("/// " + comment.Replace("\r\n", " ") + "\r\n\t\t\t/// </summary>");
              else
                Write("/// </summary>");    
            #>
           
            public const string <#= dict.Key#>="<#= dict.Key#>";

    <#
    }
    #>
        }
    }


}
