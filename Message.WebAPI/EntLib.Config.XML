<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />
    <container name="DefContainer">
      <extension type="Interception" />
      <register  type="BusinessObject.IT_ACTIONTYPEBO, BusinessObject"
                 mapTo="BusinessObject.T_ACTIONTYPEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_ADAPTER_CONFIGBO, BusinessObject"
                 mapTo="BusinessObject.T_ADAPTER_CONFIGBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_ADAPTER_CONFIG_DETAILBO, BusinessObject"
                 mapTo="BusinessObject.T_ADAPTER_CONFIG_DETAILBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_EVENTBO, BusinessObject"
                 mapTo="BusinessObject.T_EVENTBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_FAILED_EVENTBO, BusinessObject"
                 mapTo="BusinessObject.T_FAILED_EVENTBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_InterfaceInvokeLogBO, BusinessObject"
                 mapTo="BusinessObject.T_InterfaceInvokeLogBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_MESSAGEPACKAGE_ADDRESSBO, BusinessObject"
                 mapTo="BusinessObject.T_MESSAGEPACKAGE_ADDRESSBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_MESSAGEPACKAGE_LOGBO, BusinessObject"
                 mapTo="BusinessObject.T_MESSAGEPACKAGE_LOGBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_MESSAGEPACKAGE_RECADDSBO, BusinessObject"
                 mapTo="BusinessObject.T_MESSAGEPACKAGE_RECADDSBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_MESSAGEPACKAGE_RECEIVEBO, BusinessObject"
                 mapTo="BusinessObject.T_MESSAGEPACKAGE_RECEIVEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_MESSAGEPACKAGE_SENDBO, BusinessObject"
                 mapTo="BusinessObject.T_MESSAGEPACKAGE_SENDBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_MESSAGEPACKAGE_SENDADDSBO, BusinessObject"
                 mapTo="BusinessObject.T_MESSAGEPACKAGE_SENDADDSBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_MSG_TEMPLATEBO, BusinessObject"
                 mapTo="BusinessObject.T_MSG_TEMPLATEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_MSGTYPEBO, BusinessObject"
                 mapTo="BusinessObject.T_MSGTYPEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_NotifySmsDeliveryReceiptBO, BusinessObject"
                 mapTo="BusinessObject.T_NotifySmsDeliveryReceiptBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_ORGANIZATIONBO, BusinessObject"
                 mapTo="BusinessObject.T_ORGANIZATIONBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_ORGANIZATION_ROLEBO, BusinessObject"
                 mapTo="BusinessObject.T_ORGANIZATION_ROLEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_PRIVILEGEBO, BusinessObject"
                 mapTo="BusinessObject.T_PRIVILEGEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_PRIVILEGETYPEBO, BusinessObject"
                 mapTo="BusinessObject.T_PRIVILEGETYPEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_PROFILECONTACTBO, BusinessObject"
                 mapTo="BusinessObject.T_PROFILECONTACTBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_PROFILECONTACTGROUPBO, BusinessObject"
                 mapTo="BusinessObject.T_PROFILECONTACTGROUPBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_REF_RULE_USERBO, BusinessObject"
                 mapTo="BusinessObject.T_REF_RULE_USERBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_ROLEBO, BusinessObject"
                 mapTo="BusinessObject.T_ROLEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_ROLE_PRIVILEGEBO, BusinessObject"
                 mapTo="BusinessObject.T_ROLE_PRIVILEGEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_ROLETYPEBO, BusinessObject"
                 mapTo="BusinessObject.T_ROLETYPEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_SEND_RULEBO, BusinessObject"
                 mapTo="BusinessObject.T_SEND_RULEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_SEND_RULE_CONFIGBO, BusinessObject"
                 mapTo="BusinessObject.T_SEND_RULE_CONFIGBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_SEND_TASKBO, BusinessObject"
                 mapTo="BusinessObject.T_SEND_TASKBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_SEND_TYPEBO, BusinessObject"
                 mapTo="BusinessObject.T_SEND_TYPEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_SendSMSHistoryBO, BusinessObject"
                 mapTo="BusinessObject.T_SendSMSHistoryBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_SMS_UserListBO, BusinessObject"
                 mapTo="BusinessObject.T_SMS_UserListBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_SMS_UserStateBO, BusinessObject"
                 mapTo="BusinessObject.T_SMS_UserStateBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_SmsDeliverLog_EntireBO, BusinessObject"
                 mapTo="BusinessObject.T_SmsDeliverLog_EntireBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_TASKBO, BusinessObject"
                 mapTo="BusinessObject.T_TASKBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_TASK_RECORDBO, BusinessObject"
                 mapTo="BusinessObject.T_TASK_RECORDBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_TERMINALBO, BusinessObject"
                 mapTo="BusinessObject.T_TERMINALBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_TERMINAL_CONFIGBO, BusinessObject"
                 mapTo="BusinessObject.T_TERMINAL_CONFIGBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_USERBO, BusinessObject"
                 mapTo="BusinessObject.T_USERBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_USER_PRIVILEGEBO, BusinessObject"
                 mapTo="BusinessObject.T_USER_PRIVILEGEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IT_USER_ROLEBO, BusinessObject"
                 mapTo="BusinessObject.T_USER_ROLEBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IV_MESSAGEPACKAGE_SENDBO, BusinessObject"
                 mapTo="BusinessObject.V_MESSAGEPACKAGE_SENDBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IV_MESSAGEPACKAGE_SENDADDSBO, BusinessObject"
                 mapTo="BusinessObject.V_MESSAGEPACKAGE_SENDADDSBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IV_ORGROLELISTBO, BusinessObject"
                 mapTo="BusinessObject.V_ORGROLELISTBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IV_USERPRIVILEGELISTBO, BusinessObject"
                 mapTo="BusinessObject.V_USERPRIVILEGELISTBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
      <register  type="BusinessObject.IV_USERROLELISTBO, BusinessObject"
                 mapTo="BusinessObject.V_USERROLELISTBO, BusinessObject">
        <lifetime type="singleton" />
        <constructor/>
        <interceptor type="TransparentProxyInterceptor" />
        <policyInjection />
      </register >
    </container>
  </unity>
</configuration>


